plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // Подключение плагина для работы с аннотациями (нужно для Room)
    id 'kotlin-kapt'
    // Подключение плагина для удобной парселизации
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "ru.geekbrains.popular.libraries.less_1_homework"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Добавили разрешение для доступа к ресурсам, активити во время тестирования Robolectric
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // Добавили разрешение на использование Binding
    buildFeatures {
        viewBinding true
    }

    // Настройки признаков версий приложения
    flavorDimensions "default"
    productFlavors {
        fake {
            applicationIdSuffix ".fake"
            versionNameSuffix "-fake"
            buildConfigField "String", "TYPE", '"FAKE"'
        }
        real {
            applicationIdSuffix ".real"
            versionNameSuffix "-real"
            buildConfigField "String", "TYPE", '"REAL"'
        }
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTestData/java"
        }
        test {
            java.srcDirs += "src/sharedTestData/java"
        }
    }
}

dependencies {
    //AndroidX
    implementation libs.androidX.appcompat
    //Kotlin
    implementation libs.kotlin.ktx
    implementation libs.kotlin.jdk7
//    implementation libs.kotlin.coroutinescore
//    implementation libs.kotlin.coroutinesandroid
    //Design
    implementation libs.design.material
    implementation libs.design.constrlayout
    // Test
    testImplementation libs.tests.junit
    // Core
    androidTestImplementation libs.tests.ext // Нужно для работы AndroidJUnit4 в инструментальных-тестах
    androidTestImplementation libs.tests.espressocore
    testImplementation 'androidx.arch.core:core-testing:2.1.0' // Нужно для InstantTaskExecutorRule
    // Mockito
    testImplementation libs.tests.mockitocore
    testImplementation libs.tests.mockitoinline
    testImplementation (libs.tests.mockitokotlin) {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }
    // Robolectric
    testImplementation libs.tests.robolectric
    testImplementation libs.tests.robolectriccore
    testImplementation libs.tests.robolectricrunner
    testImplementation libs.tests.ext // Нужно для работы AndroidJUnit4 в Unit-тестах
    testImplementation libs.tests.robolectrictruth
    testImplementation libs.tests.robolectricespressocore
    testImplementation libs.tests.robolectricespressointents
    // UI Automator
    androidTestImplementation libs.tests.uiautomator
    androidTestImplementation libs.tests.uiautomatorrules
    // Fragment
//    debugImplementation libs.tests.fragment
    // RecyclerView
//    debugImplementation libs.tests.recyclerView
    // Lifecycle
//    implementation libs.lifecycle.extensions
    // LiveData
//    implementation libs.lifecycle.ktx
    // Lifecycles only (without ViewModel or LiveData)
//    implementation libs.lifecycle.runtimektx
//    implementation libs.lifecycle.process
//    implementation libs.lifecycle.java8
/*    // Moxy
    implementation libs.moxy.community
    kapt libs.moxy.compiler
    implementation libs.moxy.ktx
    implementation libs.moxy.androidx */
/*    // Cicerony
    implementation libs.cicerony.runtime */
//    // RxJava
    implementation libs.rxJava.android
    implementation libs.rxJava.reactive
    implementation libs.rxJava.adapter
//    // Glide
//    implementation libs.glide.runtime
//    kapt libs.glide.compiler
//    // Picasso
//    implementation libs.picasso.runtime
/*    // OkHTTP
    implementation libs.okHTTP.runtime */
    // Retrofit
    implementation libs.retrofit.runtime
    implementation libs.retrofit.gson
//    implementation libs.retrofit.rxJava2
////    implementation libs.retrofit.rxJava3 // одновременно с rxJava2 не включать
//    implementation libs.retrofit.interceptor
    // Room
//    implementation libs.room.runtime
//    kapt libs.room.compiler
//    kapt libs.room.m1Support
//    implementation libs.room.rxJava3
//    implementation libs.room.ktx
    // Coroutines
//    implementation libs.coroutines.android
/*    // Dagger
    implementation libs.dagger.daggger
    implementation libs.dagger.runtime
    implementation libs.dagger.support
    kapt libs.dagger.processor
    kapt libs.dagger.compiler
    kapt libs.dagger.addsupport */
    // Koin
    //Koin core features
    implementation libs.koin.core
    //Koin main features for Android (Scope,ViewModel ...)
    implementation libs.koin.android
//    implementation libs.koin.viewmodel
    //Koin Java Compatibility
    implementation libs.koin.compat
    // For Retrofit 2 coroutines
    implementation libs.koin.retrofitcoroutines
    // Koin for Tests
//    testImplementation libs.koin.testsandroidx
    testImplementation libs.koin.testsio
    // Firebase
    implementation libs.firebase.firestore
}